{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","value","onChange","Scroll","props","style","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACzB,MAAO,CACH,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,YCWLK,EAhBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,MAAO,CACL,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACf,MAAO,CACP,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,WCEFC,EATG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC7B,MAAO,CACH,qBAAKV,UAAU,SAAf,SACI,uBAAOA,UAAU,mCAAmCW,KAAK,SAASC,YAAY,gBAAgBC,MAAOJ,EAAaK,SAAUJ,QCKzHK,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAYC,OAAQ,SAA7C,SACKH,EAAMI,YCiBJC,E,kDAnBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,4CAEJG,KAAKV,MAAMI,a,GAhBCQ,aCgDZC,G,wDAzCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOnB,SAbzC,EAAKS,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJR,E,qDAQb,WAAqB,IAAD,OAChBwB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAEvB,OAAQiC,S,oBAQ/C,WACI,MAA8BX,KAAKJ,MAA5BlB,EAAP,EAAOA,OAAQK,EAAf,EAAeA,YACT6B,EAAelC,EAAOmC,QAAO,SAAAC,GAAU,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASjC,EAAYgC,kBAClG,OAAKrC,EAAOuC,OAID,CACH,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQkC,YAT3B,6C,GAxBDM,IAAMhB,YCITiB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.32d7071b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id}) => {\n    return [\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    ];\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n    return [\n      <div>\n        {robots.map((user, i) => {\n            return [\n            <Card \n            key={i} \n            id={robots[i].id} \n            name={robots[i].name}\n            email={robots[i].email}\n            />];\n             })}\n      </div>\n    ];\n}\n\nexport default CardList;","import React from 'react';\n\nconst Searchbox = ({searchfield, searchChange}) => {\n    return [\n        <div className='tc pa2'>\n            <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='search robots' value={searchfield} onChange={searchChange}/>\n        </div>\n    ];\n\n\n}\nexport default Searchbox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll',   height: '800px' }}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true})\n    }\n\n    render(){\n        if(this.state.hasError) {\n            return <h1>yikes dawg</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React from 'react';\nimport CardList from '../components/CardList';\n//import { robots } from './robots';\nimport Searchbox from '../components/Searchbox';\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users}));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n        //console.log(filterRobots);\n    }\n\n    render() {\n        const {robots, searchfield} = this.state;\n        const filterRobots = robots.filter(robot => {return robot.name.toLowerCase().includes(searchfield.toLowerCase())})\n        if (!robots.length){\n            return <h1>Loading</h1>\n        }\n        else{\n            return [\n                <div className='tc'>\n                    <h1 className='f2'>RoboFriends</h1>\n                    <Searchbox searchChange={this.onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filterRobots}/>\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            ];\n        }\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n//import Card from './Card';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}